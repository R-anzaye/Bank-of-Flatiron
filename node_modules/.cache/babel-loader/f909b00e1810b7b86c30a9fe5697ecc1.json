{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ryantrent/Development/code_challenges/Bank-of-Flatiron-phase-2-week-1/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\n\nfunction Search() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]); // Initialize state for transactions\n\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Initialize state for search term\n\n  const [loading, setLoading] = useState(true); // State for loading indicator\n\n  const [error, setError] = useState(null); // State for error handling\n\n  useEffect(() => {\n    setLoading(true); // Set loading to true before fetching data\n\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => {\n      setTransactions(data);\n      setLoading(false); // Set loading to false after data is fetched\n    }).catch(error => {\n      setError(error.message); // Set error state if fetching fails\n\n      setLoading(false); // Set loading to false\n    });\n  }, []); // Memoized filtered transactions\n\n  const filteredTransactions = useMemo(() => transactions.filter(transaction => transaction.description.toLowerCase().includes(searchTerm.toLowerCase())), [transactions, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui large fluid icon input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your Recent Transactions\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"circular search link icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [transaction.description, \" - $\", transaction.amount]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"6/rw3novlcNEtzpMwbNGxViJFkQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/ryantrent/Development/code_challenges/Bank-of-Flatiron-phase-2-week-1/src/components/Search.js"],"names":["React","useState","useEffect","useMemo","Search","transactions","setTransactions","searchTerm","setSearchTerm","loading","setLoading","error","setError","fetch","then","response","json","data","catch","message","filteredTransactions","filter","transaction","description","toLowerCase","includes","e","target","value","map","amount","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD,CADgB,CACsC;;AACtD,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C,CAFgB,CAEkC;;AAClD,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC,CAHgB,CAG8B;;AAC9C,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC,CAJgB,CAI0B;;AAE1CC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV,CADc,CACI;;AAClBG,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdX,MAAAA,eAAe,CAACW,IAAD,CAAf;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFc,CAEK;AACpB,KALH,EAMGQ,KANH,CAMUP,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR,CADgB,CACS;;AACzBT,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFgB,CAEG;AACpB,KATH;AAUD,GAZQ,EAYN,EAZM,CAAT,CANgB,CAoBhB;;AACA,QAAMU,oBAAoB,GAAGjB,OAAO,CAAC,MACnCE,YAAY,CAACgB,MAAb,CAAoBC,WAAW,IAC7BA,WAAW,CAACC,WAAZ,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+ClB,UAAU,CAACiB,WAAX,EAA/C,CADF,CADkC,EAG/B,CAACnB,YAAD,EAAeE,UAAf,CAH+B,CAApC;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,iCAFd;AAGE,QAAA,KAAK,EAAEA,UAHT;AAIE,QAAA,QAAQ,EAAGmB,CAAD,IAAOlB,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGnB,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXd,EAaGE,KAAK,iBAAI;AAAA,4BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAbZ,eAeE;AAAA,gBACGS,oBAAoB,CAACS,GAArB,CAAyBP,WAAW,iBACnC;AAAA,mBACGA,WAAW,CAACC,WADf,UACgCD,WAAW,CAACQ,MAD5C;AAAA,SAASR,WAAW,CAACS,EAArB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAnDQ3B,M;;KAAAA,M;AAqDT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\n\nfunction Search() {\n  const [transactions, setTransactions] = useState([]); // Initialize state for transactions\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Initialize state for search term\n  const [loading, setLoading] = useState(true); // State for loading indicator\n  const [error, setError] = useState(null); // State for error handling\n\n  useEffect(() => {\n    setLoading(true); // Set loading to true before fetching data\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => {\n        setTransactions(data);\n        setLoading(false); // Set loading to false after data is fetched\n      })\n      .catch((error) => {\n        setError(error.message); // Set error state if fetching fails\n        setLoading(false); // Set loading to false\n      });\n  }, []);\n\n  // Memoized filtered transactions\n  const filteredTransactions = useMemo(() =>\n    transactions.filter(transaction =>\n      transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n    ), [transactions, searchTerm]);\n\n  return (\n    <div>\n      <div className=\"ui large fluid icon input\">\n        <input\n          type=\"text\"\n          placeholder=\"Search your Recent Transactions\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <i className=\"circular search link icon\"></i>\n      </div>\n      {/* Render loading indicator */}\n      {loading && <p>Loading...</p>}\n      {/* Render error message */}\n      {error && <p>Error: {error}</p>}\n      {/* Render filtered transactions */}\n      <ul>\n        {filteredTransactions.map(transaction => (\n          <li key={transaction.id}>\n            {transaction.description} - ${transaction.amount}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Search;\n\n"]},"metadata":{},"sourceType":"module"}