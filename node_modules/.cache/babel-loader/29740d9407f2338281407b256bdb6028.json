{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ryantrent/Development/code_challenges/Bank-of-Flatiron-phase-2-week-1/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\n\nfunction Search() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]); // Initialize state for transactions\n\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Initialize state for search term\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => {\n      setTransactions(data);\n    });\n  }, []); // Memoized filtered transactions\n\n  const filteredTransactions = useMemo(() => transactions.filter(transaction => transaction.description.toLowerCase().includes(searchTerm.toLowerCase())), [transactions, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui large fluid icon input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your Recent Transactions\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"circular search link icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: transaction.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: transaction.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: transaction.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"KX8ZNBGG39Mw1lAzv/8gguv4HHg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/ryantrent/Development/code_challenges/Bank-of-Flatiron-phase-2-week-1/src/components/Search.js"],"names":["React","useState","useEffect","useMemo","Search","transactions","setTransactions","searchTerm","setSearchTerm","fetch","then","response","json","data","filteredTransactions","filter","transaction","description","toLowerCase","includes","e","target","value","map","date","category","amount","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD,CADgB,CACsC;;AACtD,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C,CAFgB,CAEkC;;AAElDC,EAAAA,SAAS,CAAC,MAAM;AAEdO,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdP,MAAAA,eAAe,CAACO,IAAD,CAAf;AAED,KALH;AAMC,GARM,EAQJ,EARI,CAAT,CAJgB,CAchB;;AACA,QAAMC,oBAAoB,GAAGX,OAAO,CAAC,MACnCE,YAAY,CAACU,MAAb,CAAoBC,WAAW,IAC7BA,WAAW,CAACC,WAAZ,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CZ,UAAU,CAACW,WAAX,EAA/C,CADF,CADkC,EAG/B,CAACb,YAAD,EAAeE,UAAf,CAH+B,CAApC;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,iCAFd;AAGE,QAAA,KAAK,EAAEA,UAHT;AAIE,QAAA,QAAQ,EAAGa,CAAD,IAAOZ,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,KAAD,CAAO,QAAP;AAAA,gBACGR,oBAAoB,CAACS,GAArB,CAAyBP,WAAW,iBACnC;AAAA,gCACE;AAAA,iCACA;AAAA,sBAAKA,WAAW,CAACQ;AAAjB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIA;AAAA,iCACE;AAAA,sBAAKR,WAAW,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJA,eAOA;AAAA,iCACE;AAAA,sBAAKD,WAAW,CAACS;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPA,eAUA;AAAA,iCACE;AAAA,sBAAKT,WAAW,CAACU;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVA;AAAA,SAASV,WAAW,CAACW,EAArB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GArDQvB,M;;KAAAA,M;AAuDT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\n\nfunction Search() {\n  const [transactions, setTransactions] = useState([]); // Initialize state for transactions\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Initialize state for search term\n \n  useEffect(() => {\n  \n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => {\n        setTransactions(data);\n       \n      })\n    }, []);\n\n  // Memoized filtered transactions\n  const filteredTransactions = useMemo(() =>\n    transactions.filter(transaction =>\n      transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n    ), [transactions, searchTerm]);\n\n  return (\n    <div>\n      <div className=\"ui large fluid icon input\">\n        <input\n          type=\"text\"\n          placeholder=\"Search your Recent Transactions\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <i className=\"circular search link icon\"></i>\n      </div>\n   \n      <React.Fragment >\n        {filteredTransactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>\n            <h3>{transaction.date}</h3>\n          </td>\n          <td>\n            <h3>{transaction.description}</h3>\n          </td>\n          <td>\n            <h3>{transaction.category}</h3>\n          </td>\n          <td>\n            <h3>{transaction.amount}</h3>\n          </td>\n        </tr>\n           \n        ))}\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default Search;\n\n"]},"metadata":{},"sourceType":"module"}