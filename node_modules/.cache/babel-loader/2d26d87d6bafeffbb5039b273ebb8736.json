{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ryantrent/Development/code_challenges/Bank-of-Flatiron-phase-2-week-1/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const [date, setDate] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    function handleDate(e) {\n      setDate(e.target.value);\n    }\n\n    function handleDescription(e) {\n      setDescription(e.target.value);\n    }\n\n    function handleCategory(e) {\n      setCategory(e.target.value);\n    }\n\n    function handleAmount(e) {\n      setAmount(e.target.value);\n    }\n\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: {\n          date\n        },\n        description: {\n          description\n        },\n        category: {\n          category\n        },\n        amount: {\n          amount\n        }\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          value: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"pMgAOHiFyU9oI2KiLcrPru/oAAA=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/ryantrent/Development/code_challenges/Bank-of-Flatiron-phase-2-week-1/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","date","setDate","description","setDescription","category","setCategory","amount","setAmount","handleSubmit","e","preventDefault","handleDate","target","value","handleDescription","handleCategory","handleAmount","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log"],"mappings":"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","sourcesContent":["\nimport React,{useState} from \"react\"\n\nfunction AddTransactionForm() {\n\n  const [date, setDate] =useState()\n  const [description, setDescription] =useState(\"\")\n  const [category, setCategory] =useState(\"\")\n  const [amount, setAmount] =useState(0)\n\n   function handleSubmit(e){\n     e.preventDefault()\n     \n     function handleDate(e){\n     setDate(e.target.value)\n     }\n\n     function handleDescription(e){\n     setDescription(e.target.value)\n     }\n\n     function handleCategory(e){\n     setCategory(e.target.value)\n     }\n     function handleAmount(e){\n     setAmount(e.target.value)\n     }\n\n     fetch(\"http://localhost:8001/transactions\", {\n       method: \"POST\",\n       headers: {\n         \"Content-Type\": \"application/json\",\n       },\n       body: JSON.stringify({ \n         date: {date},\n         description: {description},\n         category: {category},\n         amount: {amount},\n       }),\n     })\n      .then((response) => response.json())\n      .then((data) => {\n         console.log(data);\n       });\n   }\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\"  value={date}/>\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" value={description}/>\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" value={category}/>\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" value={amount} />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"]},"metadata":{},"sourceType":"module"}